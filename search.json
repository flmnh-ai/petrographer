[{"path":"https://flmnh-ai.github.io/petrographer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 petrographer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Gauthier. Author, maintainer. Ashley Rutkoski. Author.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gauthier N, Rutkoski (2025). petrographer: Petrographic Thin Section Analysis Deep Learning. R package version 0.0.0.9000, https://flmnh-ai.github.io/petrographer/.","code":"@Manual{,   title = {petrographer: Petrographic Thin Section Analysis with Deep Learning},   author = {Nicolas Gauthier and Ashley Rutkoski},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://flmnh-ai.github.io/petrographer/}, }"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"petrographer-petrographic-image-analysis-with-detectron2-and-sahi","dir":"","previous_headings":"","what":"Petrographic Thin Section Analysis with Deep Learning","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Automated instance segmentation morphological analysis petrographic thin sections using state---art computer vision models.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Petrographic Thin Section Analysis with Deep Learning","text":"R package provides complete workflow training, evaluating, analyzing petrographic thin section images using Detectron2 SAHI (Slicing Aided Hyper Inference) improved detection small objects. workflow combines Python-based machine learning R-based analysis visualization clean, modern interface. Quick start (local) Quick start (HPC) Setup: First configure HPC defaults .Renviron: restart R train: Alternative: Override environment variables needed: Safety remote deletion performed automatically. Use rsync_mode = \"mirror\" avoid accumulating stale files across reruns.","code":"library(petrographer)  # Validate dataset validate_dataset(\"data/processed/shell_mixed\")  # Train locally model_dir <- train_model(   data_dir = \"data/processed/shell_mixed\",   output_name = \"shell_detector_v3\",   num_classes = 5,   device = \"cpu\" # or \"cuda\"/\"mps\" )  evaluate_training(model_dir) # Add to your .Renviron file (edit with usethis::edit_r_environ()) usethis::edit_r_environ(\"project\")  # Add these lines: PETROGRAPHER_HPC_HOST=\"hpg\" PETROGRAPHER_HPC_BASE_DIR=\"/blue/your_lab/your_user\" library(petrographer)  # HPC settings are read from environment variables model_dir <- train_model(   data_dir = \"data/processed/shell_mixed\",   output_name = \"shell_detector_v3\",   num_classes = 5,   hpc_user = \"your_user\"  # optional if different from system user ) model_dir <- train_model(   data_dir = \"data/processed/shell_mixed\",    output_name = \"shell_detector_v3\",   num_classes = 5,   hpc_host = \"different.cluster.edu\",   hpc_base_dir = \"/different/path\" )"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"key-features","dir":"","previous_headings":"Overview","what":"Key Features","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Advanced Instance Segmentation: Uses Detectron2 Mask R-CNN SAHI high-quality detection Morphological Analysis: Comprehensive particle characterization (size, shape, orientation, etc.) Unified Training Interface: Local HPC training R functions automatic job management Interactive Analysis: Modern R workflow using cli, fs, glue professional output Batch Processing: Efficient processing large image collections Model Management: Automatic model download caching system","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"prerequisites","dir":"","previous_headings":"Installation and Setup","what":"Prerequisites","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Python 3.8+ detectron2, SAHI, dependencies R 4.0+ required packages CUDA-capable GPU (recommended training)","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"r-dependencies","dir":"","previous_headings":"Installation and Setup","what":"R Dependencies","title":"Petrographic Thin Section Analysis with Deep Learning","text":"","code":"install.packages(c(\"reticulate\", \"tidyverse\", \"magick\", \"scico\",                     \"patchwork\", \"glue\", \"cli\", \"fs\", \"future\"))"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"python-dependencies","dir":"","previous_headings":"Installation and Setup","what":"Python Dependencies","title":"Petrographic Thin Section Analysis with Deep Learning","text":"package automatically manages Python dependencies. Required packages: - detectron2 - sahi - torch, torchvision - opencv-python - scikit-image","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"id_1-load-the-package-functions","dir":"","previous_headings":"Quick Start","what":"1. Load the Package Functions","title":"Petrographic Thin Section Analysis with Deep Learning","text":"","code":"# Load all package functions source(\"R/model.R\") source(\"R/training.R\")  source(\"R/prediction.R\") source(\"R/data_utils.R\") source(\"R/summary.R\")"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"id_2-data-preparation","dir":"","previous_headings":"Quick Start","what":"2. Data Preparation","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Organize data COCO format:","code":"data/processed/ ├── shell_mixed/         # 5-class shell detection ├── inclusions/          # 2-class inclusion detection ├── background_removal/  # 2-class background removal │   ├── train/ │   │   ├── _annotations.coco.json │   │   └── [training images] │   └── val/ │       ├── _annotations.coco.json │       └── [validation images]"},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"local-training","dir":"","previous_headings":"Quick Start > 3. Model Training","what":"Local Training","title":"Petrographic Thin Section Analysis with Deep Learning","text":"","code":"model_path <- train_model(   data_dir = \"data/processed/shell_mixed\",   output_name = \"shell_detector_v3\",   max_iter = 2000,   num_classes = 5,   device = \"cuda\"  # or \"cpu\", \"mps\" )"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"hpc-training-slurm","dir":"","previous_headings":"Quick Start > 3. Model Training","what":"HPC Training (SLURM)","title":"Petrographic Thin Section Analysis with Deep Learning","text":"","code":"model_path <- train_model(   data_dir = \"data/processed/inclusions\",    output_name = \"inclusions_v2\",   max_iter = 4000,   num_classes = 2,   hpc_host = \"hpg.rc.ufl.edu\",   hpc_user = \"your.username\",   hpc_base_dir = \"/blue/your.group/your.username\" )"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"id_4-model-loading-and-prediction","dir":"","previous_headings":"Quick Start","what":"4. Model Loading and Prediction","title":"Petrographic Thin Section Analysis with Deep Learning","text":"","code":"# Load trained model (automatically downloads if needed) model <- load_model(confidence = 0.5, device = \"cpu\")  # Analyze single image result <- predict_image(   image_path = \"data/raw/sample_image.jpg\",   model = model,   use_slicing = TRUE,   slice_size = 512,   overlap = 0.2 )  # Batch processing batch_result <- predict_images(   input_dir = \"data/raw/batch_images/\",   model = model,   output_dir = \"results/batch_analysis\" )"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"id_5-analysis-and-visualization","dir":"","previous_headings":"Quick Start","what":"5. Analysis and Visualization","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Use analysis notebooks: - petrography_analysis.qmd - Main analysis workflow - training/training_shell.qmd - Shell detection training - training/training_inclusions.qmd - Inclusion detection training - training/training_background_removal.qmd - Background removal training","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"model-management","dir":"","previous_headings":"Core Functions","what":"Model Management","title":"Petrographic Thin Section Analysis with Deep Learning","text":"load_model() - Load detection model caching download_model() - Download pretrained models","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"training","dir":"","previous_headings":"Core Functions","what":"Training","title":"Petrographic Thin Section Analysis with Deep Learning","text":"train_model() - Unified training interface (local HPC) evaluate_training() - Analyze training metrics logs","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"prediction","dir":"","previous_headings":"Core Functions","what":"Prediction","title":"Petrographic Thin Section Analysis with Deep Learning","text":"predict_image() - Analyze single image morphological analysis predict_images() - Process multiple images efficiently","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"analysis","dir":"","previous_headings":"Core Functions","what":"Analysis","title":"Petrographic Thin Section Analysis with Deep Learning","text":"enhance_results() - Add derived morphological properties summarize_by_image() - Per-image statistical summaries get_population_stats() - Overall population metrics","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"prediction-results","dir":"","previous_headings":"Output Files","what":"Prediction Results","title":"Petrographic Thin Section Analysis with Deep Learning","text":"CSV files: Detailed morphological measurements per object Visualizations: Images detected objects confidence scores Summary statistics: Per-image population-level metrics","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"morphological-properties","dir":"","previous_headings":"Output Files","what":"Morphological Properties","title":"Petrographic Thin Section Analysis with Deep Learning","text":"detected object includes: - Basic metrics: Area, perimeter, centroid coordinates - Shape descriptors: Eccentricity, orientation, circularity, aspect ratio - Advanced features: Solidity, extent, major/minor axis lengths - Derived metrics: Log area, size categories, shape categories","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"training-evaluation","dir":"","previous_headings":"Output Files","what":"Training Evaluation","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Training curves: Loss progression iterations Validation metrics: Model performance validation set Learning rate schedule: LR changes training","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"training-parameters","dir":"","previous_headings":"Configuration","what":"Training Parameters","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Key parameters train_model(): - max_iter: Training iterations (2000-4000 typical) - learning_rate: Base learning rate (0.00025-0.001) - num_classes: Number object classes - eval_period: Validation frequency (100-500 iterations) - device: “cpu”, “cuda”, “mps”","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"sahi-parameters","dir":"","previous_headings":"Configuration","what":"SAHI Parameters","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Optimize data: - slice_size: Slice dimensions (512 recommended) - overlap: Overlap slices (0.2 typical) - confidence: Detection threshold (0.3-0.7)","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"hpc-configuration","dir":"","previous_headings":"Configuration","what":"HPC Configuration","title":"Petrographic Thin Section Analysis with Deep Learning","text":"SLURM training: - hpc_host: SSH hostname (e.g., “hpg.rc.ufl.edu”) - hpc_user: username - hpc_base_dir: Remote working directory - Automatic file sync job monitoring","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"for-dense-small-objects-200-per-image","dir":"","previous_headings":"Performance Optimization","what":"For Dense Small Objects (200+ per image)","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Keep ROI_HEADS.BATCH_SIZE_PER_IMAGE = 512 Use moderate batch sizes (IMS_PER_BATCH = 4) Enable mixed precision training (AMP) Consider higher TEST.DETECTIONS_PER_IMAGE values","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"training-speed","dir":"","previous_headings":"Performance Optimization","what":"Training Speed","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Use IMS_PER_BATCH = 4 good speed/accuracy balance Enable AMP 30-50% speedup modern GPUs Optimize NUM_WORKERS match available CPU cores Use 4-hour SLURM time limits safety","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"training-issues","dir":"","previous_headings":"Troubleshooting","what":"Training Issues","title":"Petrographic Thin Section Analysis with Deep Learning","text":"CUDA memory: Reduce IMS_PER_BATCH (try 2-4) Slow training: Check GPU utilization, enable AMP Job timeouts: Training time scales image resolution object density","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"detection-issues","dir":"","previous_headings":"Troubleshooting","what":"Detection Issues","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Missing small objects: Lower confidence threshold, use smaller slice sizes False positives: Increase confidence threshold, check training data quality Poor segmentation: Verify annotation quality, increase training iterations","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"r-python-integration","dir":"","previous_headings":"Troubleshooting","what":"R-Python Integration","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Import errors: Check py_require() calls notebooks Environment issues: Restart R session, verify Python environment Path problems: Use absolute paths, check file existence","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"file-structure","dir":"","previous_headings":"","what":"File Structure","title":"Petrographic Thin Section Analysis with Deep Learning","text":"","code":"petrography/ ├── R/                          # Package functions │   ├── model.R                 # Model loading and management │   ├── training.R              # Training orchestration │   ├── hpc_utils.R             # HPC/SLURM utilities │   ├── prediction.R            # Prediction and analysis │   ├── data_utils.R            # Data processing utilities │   └── summary.R               # Summary statistics ├── src/ │   └── train.py                # Python training script ├── training/                   # Training notebooks │   ├── training_shell.qmd │   ├── training_inclusions.qmd │   └── training_background_removal.qmd ├── petrography_analysis.qmd    # Main analysis workflow └── data/processed/             # Training datasets (gitignored)"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Petrographic Thin Section Analysis with Deep Learning","text":"use workflow research, please cite:","code":"@software{petrography_analysis,   title={Petrographic Image Analysis with Detectron2 and SAHI},   author={Nicolas Gauthier},   year={2025},   url={https://github.com/your-repo/petrography} }"},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Detectron2 instance segmentation SAHI sliced inference reticulate R-Python integration Modern R utilities: cli, fs, glue","code":""},{"path":"https://flmnh-ai.github.io/petrographer/index.html","id":"model-registry-pins","dir":"","previous_headings":"","what":"Model Registry (pins)","title":"Petrographic Thin Section Analysis with Deep Learning","text":"Use pins package publish load trained models name. optional default. Basic flow: Publish automatically training:","code":"library(petrographer)  # 1) Configure a board (defaults to local, versioned) board <- pg_board()  # or set PETRO_PINS_PATH or PETRO_S3_BUCKET env vars  # 2) Publish a trained model directory publish_model(   model_dir = \"Detectron2_Models/shell_detector_v3\",   name = \"shell_detector_v3\",   board = board,   metadata = list(owner = Sys.info()[[\"user\"]]),   include_metrics = TRUE )  # 3) Load a model by name mdl <- load_model(model_name = \"shell_detector_v3\", device = \"cpu\")  # 4) Discover pins (optional; uses pins directly) if (requireNamespace(\"pins\", quietly = TRUE)) {   pins::pin_list(board)   pins::pin_meta(board, \"shell_detector_v3\") } train_model(   data_dir = \"data/processed/shell_mixed\",   output_name = \"shell_detector_v4\",   num_classes = 5,   publish_after_train = TRUE,   model_board = pg_board() )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/calculate_morphology_from_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate morphological properties from SAHI result — calculate_morphology_from_result","title":"Calculate morphological properties from SAHI result — calculate_morphology_from_result","text":"Internal helper converting SAHI object predictions tibble morphological properties using scikit-image via reticulate.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/calculate_morphology_from_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate morphological properties from SAHI result — calculate_morphology_from_result","text":"","code":"calculate_morphology_from_result(result, image_path)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/calculate_morphology_from_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate morphological properties from SAHI result — calculate_morphology_from_result","text":"result SAHI prediction result object. image_path Original image path (used populate image_name).","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/calculate_morphology_from_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate morphological properties from SAHI result — calculate_morphology_from_result","text":"tibble morphological properties per object.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/evaluate_training.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate model training Reads Detectron2 metrics.json and exports:  training_metrics.csv: losses, lr, etc. validation_metrics.csv: aggregate COCO bbox and segm AP metrics validation_classwise.csv: per-class AP metrics (when logged by evaluator)  — evaluate_training","title":"Evaluate model training Reads Detectron2 metrics.json and exports:  training_metrics.csv: losses, lr, etc. validation_metrics.csv: aggregate COCO bbox and segm AP metrics validation_classwise.csv: per-class AP metrics (when logged by evaluator)  — evaluate_training","text":"Evaluate model training Reads Detectron2 metrics.json exports: training_metrics.csv: losses, lr, etc. validation_metrics.csv: aggregate COCO bbox segm AP metrics validation_classwise.csv: per-class AP metrics (logged evaluator)","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/evaluate_training.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate model training Reads Detectron2 metrics.json and exports:  training_metrics.csv: losses, lr, etc. validation_metrics.csv: aggregate COCO bbox and segm AP metrics validation_classwise.csv: per-class AP metrics (when logged by evaluator)  — evaluate_training","text":"","code":"evaluate_training(   model_dir = \"Detectron2_Models\",   output_dir = \"results/evaluation\" )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/evaluate_training.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate model training Reads Detectron2 metrics.json and exports:  training_metrics.csv: losses, lr, etc. validation_metrics.csv: aggregate COCO bbox and segm AP metrics validation_classwise.csv: per-class AP metrics (when logged by evaluator)  — evaluate_training","text":"model_dir Directory containing trained model (default: 'Detectron2_Models') output_dir Output directory results (default: 'results/evaluation')","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/evaluate_training.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate model training Reads Detectron2 metrics.json and exports:  training_metrics.csv: losses, lr, etc. validation_metrics.csv: aggregate COCO bbox and segm AP metrics validation_classwise.csv: per-class AP metrics (when logged by evaluator)  — evaluate_training","text":"List parsed tibbles summary statistics","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a model pin and get file paths — get_model","title":"Retrieve a model pin and get file paths — get_model","text":"Downloads model files board returns resolved file paths.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a model pin and get file paths — get_model","text":"","code":"get_model(name, version = NULL, board = pg_board())"},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a model pin and get file paths — get_model","text":"name Pin name. version Optional version id (latest default). board Pins board retrieve ; defaults pg_board().","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a model pin and get file paths — get_model","text":"list model_path, config_path, pin_meta.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_population_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get overall population statistics — get_population_stats","title":"Get overall population statistics — get_population_stats","text":"Get overall population statistics","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_population_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get overall population statistics — get_population_stats","text":"","code":"get_population_stats(.data)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_population_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get overall population statistics — get_population_stats","text":".data Data frame detections","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/get_population_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get overall population statistics — get_population_stats","text":"Named list population-level statistics","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_authenticate.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate with HPC using SSH multiplexing (handles Duo MFA) — hpc_authenticate","title":"Authenticate with HPC using SSH multiplexing (handles Duo MFA) — hpc_authenticate","text":"Authenticate HPC using SSH multiplexing (handles Duo MFA)","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_authenticate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate with HPC using SSH multiplexing (handles Duo MFA) — hpc_authenticate","text":"","code":"hpc_authenticate(hpc_host = \"hpg\", hpc_user = NULL)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_authenticate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate with HPC using SSH multiplexing (handles Duo MFA) — hpc_authenticate","text":"hpc_host Hostname (e.g., 'hpg') hpc_user Optional username","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_authenticate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate with HPC using SSH multiplexing (handles Duo MFA) — hpc_authenticate","text":"SSH target string subsequent connections","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download trained model from HPC — hpc_download","title":"Download trained model from HPC — hpc_download","text":"Download trained model HPC","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download trained model from HPC — hpc_download","text":"","code":"hpc_download(target, remote_base, output_name, local_output_dir)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_monitor.html","id":null,"dir":"Reference","previous_headings":"","what":"Monitor SLURM job until completion — hpc_monitor","title":"Monitor SLURM job until completion — hpc_monitor","text":"Monitor SLURM job completion","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_monitor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monitor SLURM job until completion — hpc_monitor","text":"","code":"hpc_monitor(target, job_id, remote_base)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_sync_and_submit.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload data/code and submit SLURM job — hpc_sync_and_submit","title":"Upload data/code and submit SLURM job — hpc_sync_and_submit","text":"Builds remote directories, syncs data code via rsync SSH multiplexed connection, submits SLURM job. Optional hpc_env preamble lines can injected load modules set environment variables.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_sync_and_submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload data/code and submit SLURM job — hpc_sync_and_submit","text":"","code":"hpc_sync_and_submit(   target,   data_dir,   hpc_base_dir,   output_name,   training_params,   gpus = 1,   hpc_env = NULL,   hpc_cpus_per_task = NULL,   hpc_mem = NULL )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/hpc_sync_and_submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload data/code and submit SLURM job — hpc_sync_and_submit","text":"target SSH target (e.g., \"user@host\" configured host). data_dir Local dataset directory. hpc_base_dir Remote base directory (job use timestamped subdir). output_name Output/model name (used remote subdirectory). training_params Character vector CLI args passed Python trainer. gpus Number GPUs request. hpc_env Optional character vector preamble lines (e.g., module loads).","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/load_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load petrography detection model — load_model","title":"Load petrography detection model — load_model","text":"Loads Detectron2/SAHI model either file paths pin name via pins registry. model_name supplied (model_path exist end .pth), model retrieved board using get_model().","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/load_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load petrography detection model — load_model","text":"","code":"load_model(   model_path = NULL,   config_path = NULL,   confidence = 0.5,   device = \"cpu\",   model_name = NULL,   version = NULL,   board = NULL )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/load_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load petrography detection model — load_model","text":"model_path Path trained model weights (ignored model_name supplied model_path appears pin name). config_path Path model config (ignored loading pin). confidence Confidence threshold (default: 0.5). device Device use: 'cpu', 'cuda', 'mps' (default: 'cpu'). model_name Optional pin name load board. version Specific version load using pins (NULL latest). board Optional pins board (defaults pg_board()).","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/load_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load petrography detection model — load_model","text":"PetrographyModel object.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/parse_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Detectron2 metrics.json into tibbles — parse_metrics","title":"Parse Detectron2 metrics.json into tibbles — parse_metrics","text":"Reads Detectron2 metrics.json (JSONL) returns separate tibbles training rows, aggregate validation metrics (bbox + segm), per-class AP available.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/parse_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Detectron2 metrics.json into tibbles — parse_metrics","text":"","code":"parse_metrics(metrics_file)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/parse_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Detectron2 metrics.json into tibbles — parse_metrics","text":"metrics_file Path metrics.json.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/parse_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Detectron2 metrics.json into tibbles — parse_metrics","text":"list elements training, validation, classwise (tibbles).","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/petrographer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"petrographer: Petrographic Thin Section Analysis with Deep Learning — petrographer-package","title":"petrographer: Petrographic Thin Section Analysis with Deep Learning — petrographer-package","text":"Automated petrographic analysis thin section images using deep learning models. Provides tools training Detectron2 models, running predictions SAHI (Slicing Aided Hyper Inference), calculating morphological properties, analyzing results. Supports local HPC training workflows seamless R-Python integration via reticulate.","code":""},{"path":[]},{"path":"https://flmnh-ai.github.io/petrographer/reference/petrographer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"petrographer: Petrographic Thin Section Analysis with Deep Learning — petrographer-package","text":"Maintainer: Nicolas Gauthier nicolas.gauthier@ufl.edu (ORCID) Authors: Ashley Rutkoski arutkoski@ufl.edu","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/pg_board.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a configured pins board — pg_board","title":"Get a configured pins board — pg_board","text":"Returns pins board configured environment variables defaults.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/pg_board.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a configured pins board — pg_board","text":"","code":"pg_board(config = NULL)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/pg_board.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a configured pins board — pg_board","text":"config Optional board object override (rarely needed).","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/pg_board.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a configured pins board — pg_board","text":"pins board object","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict objects in a single image — predict_image","title":"Predict objects in a single image — predict_image","text":"Predict objects single image","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict objects in a single image — predict_image","text":"","code":"predict_image(   image_path,   model,   use_slicing = TRUE,   slice_size = 512,   overlap = 0.2,   output_dir = NULL,   save_visualizations = TRUE )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict objects in a single image — predict_image","text":"image_path Path image file model PetrographyModel object load_model() use_slicing Whether use SAHI sliced inference (default: TRUE) slice_size Size slices SAHI pixels (default: 512) overlap Overlap ratio slices (default: 0.2) output_dir Output directory (auto-generated NULL) save_visualizations Whether save prediction visualization (default: TRUE)","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict objects in a single image — predict_image","text":"Tibble detection results morphological properties","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict objects in multiple images — predict_images","title":"Predict objects in multiple images — predict_images","text":"Runs SAHI's batch prediction folder returns combined results.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict objects in multiple images — predict_images","text":"","code":"predict_images(input_dir, model, use_slicing = TRUE, slice_size = 512, overlap = 0.2, output_dir = \"results/batch\", save_visualizations = TRUE)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict objects in multiple images — predict_images","text":"input_dir Directory containing images model PetrographyModel load_model() use_slicing Whether use SAHI sliced inference slice_size Slice size pixels overlap Overlap ratio slices output_dir Output directory visuals save_visualizations Save prediction visualizations","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/predict_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict objects in multiple images — predict_images","text":"tibble detection results images","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/publish_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish a trained model as a pin — publish_model","title":"Publish a trained model as a pin — publish_model","text":"Uploads model artifacts versioned files pin.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/publish_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish a trained model as a pin — publish_model","text":"","code":"publish_model(model_dir, name, board = pg_board(), metadata = list(), include_metrics = TRUE)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/publish_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish a trained model as a pin — publish_model","text":"model_dir Directory containing model\\_final.pth config.yaml. name Pin name publish . board Pins board publish ; defaults pg_board(). metadata Optional named list store pin metadata. include_metrics Whether include metrics.json present.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/publish_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Publish a trained model as a pin — publish_model","text":"Pin metadata list returned pins::pin_meta().","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_by_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize detections by image — summarize_by_image","title":"Summarize detections by image — summarize_by_image","text":"Summarize detections image","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_by_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize detections by image — summarize_by_image","text":"","code":"summarize_by_image(.data)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_by_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize detections by image — summarize_by_image","text":".data Data frame detections","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_by_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize detections by image — summarize_by_image","text":"Summary tibble per-image statistics","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a dataset directory — summarize_dataset","title":"Summarize a dataset directory — summarize_dataset","text":"Summarize dataset directory","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a dataset directory — summarize_dataset","text":"","code":"summarize_dataset(data_dir)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a dataset directory — summarize_dataset","text":"data_dir Directory containing 'train' 'val'","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/summarize_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a dataset directory — summarize_dataset","text":"tibble counts train val","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a new petrography detection model — train_model","title":"Train a new petrography detection model — train_model","text":"Orchestrates local HPC training using Detectron2. R computes batch size, workers, batch-scaled learning rate, calls Python trainer. Optionally publishes resulting model pins board.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a new petrography detection model — train_model","text":"","code":"train_model(   data_dir,   output_name,   num_classes,   max_iter = 12000,   learning_rate = 5e-04,   device = \"cuda\",   eval_period = 1000,   checkpoint_period = 0,   ims_per_batch = NA,   auto_scale_lr = TRUE,   num_workers = NULL,   hpc_env = NULL,   hpc_cpus_per_task = NULL,   hpc_mem = NULL,   gpus = 1,   hpc_host = Sys.getenv(\"PETROGRAPHER_HPC_HOST\", \"\"),   hpc_user = NULL,   hpc_base_dir = Sys.getenv(\"PETROGRAPHER_HPC_BASE_DIR\", \"\"),   local_output_dir = here::here(\"Detectron2_Models\"),   rsync_mode = c(\"update\", \"mirror\"),   publish_after_train = FALSE,   model_board = NULL,   model_description = NULL )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a new petrography detection model — train_model","text":"data_dir Directory containing train/ valid/ subdirectories COCO annotations. output_name Name trained model (used artifact directories pin names). max_iter Maximum training iterations. Default: 12000. learning_rate Base learning rate auto-scaling batch (default: 5e-4). Effective LR = learning_rate * (ims_per_batch / 16) auto_scale_lr = TRUE. device Device local training: 'cpu', 'cuda', 'mps' (default: 'cuda'). eval_period Validation evaluation frequency iterations (default: 500). checkpoint_period Checkpoint saving frequency (0 = final ; > 0 = every N iters). ims_per_batch Total images per iteration across GPUs. NA (default), uses 2 images per GPU. auto_scale_lr TRUE (default), scale LR linearly global batch vs. reference batch 16. num_workers DataLoader workers per process (Detectron2). NULL (default), set images per GPU. hpc_env Character vector SLURM script preamble lines (e.g., module loads). NULL, none added. hpc_cpus_per_task Optional SLURM cpus-per-task hint. hpc_mem Optional SLURM memory hint. gpus Number GPUs HPC training (default: 1; ignored local). hpc_host SSH hostname HPC training (default: PETROGRAPHER_HPC_HOST; empty local). hpc_user Username HPC (default: NULL). hpc_base_dir Remote base directory HPC (default: PETROGRAPHER_HPC_BASE_DIR). local_output_dir Local directory save trained model (default: Detectron2_Models). rsync_mode Data sync mode: 'update' (default) 'mirror' (adds –delete). publish_after_train Whether publish (pin) trained model board. model_board pins board model storage (NULL publish_after_train=TRUE, uses pg_board()). model_description Optional description include published model.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a new petrography detection model — train_model","text":"Path trained model directory.","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model_hpc.html","id":null,"dir":"Reference","previous_headings":"","what":"Train model on HPC using SLURM — train_model_hpc","title":"Train model on HPC using SLURM — train_model_hpc","text":"Train model HPC using SLURM","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model_hpc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train model on HPC using SLURM — train_model_hpc","text":"","code":"train_model_hpc(   data_dir,   output_name,   max_iter,   learning_rate,   num_classes,   eval_period,   checkpoint_period,   ims_per_batch,   num_workers,   hpc_env,   hpc_cpus_per_task,   hpc_mem,   gpus,   hpc_host,   hpc_user,   hpc_base_dir,   local_output_dir )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Train model locally using available hardware — train_model_local","title":"Train model locally using available hardware — train_model_local","text":"Train model locally using available hardware","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/train_model_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train model locally using available hardware — train_model_local","text":"","code":"train_model_local(   data_dir,   output_name,   max_iter,   learning_rate,   num_classes,   device,   eval_period,   checkpoint_period,   ims_per_batch,   num_workers,   local_output_dir )"},{"path":"https://flmnh-ai.github.io/petrographer/reference/validate_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a COCO-style dataset directory — validate_dataset","title":"Validate a COCO-style dataset directory — validate_dataset","text":"Validate COCO-style dataset directory","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/validate_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a COCO-style dataset directory — validate_dataset","text":"","code":"validate_dataset(data_dir)"},{"path":"https://flmnh-ai.github.io/petrographer/reference/validate_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a COCO-style dataset directory — validate_dataset","text":"data_dir Directory containing 'train' 'val' subdirectories","code":""},{"path":"https://flmnh-ai.github.io/petrographer/reference/validate_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a COCO-style dataset directory — validate_dataset","text":"list validation flags, counts, size metrics","code":""},{"path":"https://flmnh-ai.github.io/petrographer/news/index.html","id":"petrographer-development-version","dir":"Changelog","previous_headings":"","what":"petrographer (development version)","title":"petrographer (development version)","text":"Initial CRAN submission.","code":""}]
